package unirio.pm.gpx.test;

import static org.junit.Assert.*;

import java.io.IOException;
import java.util.ArrayList;

import javax.xml.parsers.ParserConfigurationException;

import org.junit.Test;
import org.xml.sax.SAXException;

import unirio.pm.gpx.model.Track;
import unirio.pm.gpx.model.TrackPoint;
import unirio.pm.gpx.model.TrackSegment;
import unirio.pm.gpx.parser.GPXReader;

public class TestFile {

	@Test
	//Test if it's reading the file correctly
	public void testReader() {
		String testFileName = "../GPX_Project/src/unirio/pm/gpx/file/foxboroTest.gpx";
	    
	    //Creating object lists
	    ArrayList<Track> trackList = new ArrayList<Track>();
	    ArrayList<TrackPoint> trackPointsRead = new ArrayList<TrackPoint>();
	  		
	    //Read GPX File
	    try {
			trackList = GPXReader.ReadGPX(testFileName);
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ParserConfigurationException e) {
			e.printStackTrace();
		} catch (SAXException e) {
			e.printStackTrace();
		}
	    
	    //Getting the elem readed
	    TrackSegment segment = trackList.get(0).getSegments().get(0);
	    Float readElem = segment.getTrackPoints().get(0).getEle();
	    //Getting the TrackPoint list read
	    trackPointsRead = trackList.get(0).getSegments().get(0).getTrackPoints();
	    
	    //Creating and adding TrackPoints to a list
	    ArrayList<TrackPoint> trackPointlist = new ArrayList<TrackPoint>();
	    TrackPoint firstTrackPoint = createTrackPoint("42.050664", "-71.267238", "63.584351", "2002-03-06T04:23:07Z");	
	    trackPointlist.add(firstTrackPoint);
	    TrackPoint secTrackPoint = createTrackPoint("43.050664", "-72.267238", "64.584351", "2002-03-06T05:20:07Z");	
	    trackPointlist.add(secTrackPoint);
	    
	    //Testing the list
	    assertEquals(trackPointlist.size(), trackPointsRead.size());
	    System.out.println("size: "+ trackPointlist.size());
	    
	    //Testing the elements of the lists
	    for (int i=0; i<trackPointsRead.size(); i++) {
	    	System.out.println(i);
	    	double elem1 = trackPointlist.get(i).getEle();
	    	double elem2 = trackPointsRead.get(i).getEle();
            System.out.println("1: "+elem1);
            System.out.println("2: "+elem2);
            //assuming that both lists are sorted
            assertEquals(elem1, elem2, 0.5); 
            
        };
	}
	
	//Creating new TrackPoint
	static private TrackPoint createTrackPoint(String latitude, String longitude, String ele, String time) {
				
		//Creating new TrackPoing
		TrackPoint trackPoint = new TrackPoint(Float.valueOf(latitude),Float.valueOf(longitude),Float.valueOf(ele),time);	
		return trackPoint;
	}

}
